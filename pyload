#!/usr/bin/env python3
#
import os
import sys
import serial.tools.list_ports

"""
Usage: pyload [--device <device>] file.py
Load file.py on "device". If device is not given, looks for Micropython devices
and pick the first one (but prints all devices found).
"""
ports = serial.tools.list_ports.comports()
pyports = []
idx = None
cmd = None
args = sys.argv

if '--device' in sys.argv :
  p = sys.argv.index('--device') + 1
  if p >= len(sys.argv) :
    print("# Error: device path or index expected after '--device'")
    sys.exit(1)
  if sys.argv[p].isdigit() :
    idx = int(sys.argv[p])
    args = sys.argv[0:p-1]+sys.argv[p+1:]
  else:
    cmd = "pyboard " + " ".join('"'+arg+'"' for arg in sys.argv[1:])
    
if cmd is None :
  for p in ports :
    if p.manufacturer in ['Micro Python',\
                          'MicroPython',\
                          'OpenMV',\
                          'Silicon Labs',\
                          'Microsoft'] \
    or 'USB to UART' in p.description \
    or 'BBC micro:bit' in p.description :
      pyports.append(p)
  
  if len(pyports) == 0 :
    print("No MicroPython device found")
    for p in ports :
      print("  " + p.device
          + " - " + (p.manufacturer if p.manufacturer is not None
                                    else "No manufacturer")
          + " / "
          + (p.description if p.description is not None
                           else "No description")
      )
    sys.exit(1)
  
  if len(pyports) > 1 :
    print("MicroPython devices found:")
    i = 0
    for p in pyports :
      print("  (" + str(i) + ") " + p.device + " - " + p.description)
      i += 1
    
  if idx is None :
    if len(pyports) == 1 :
      idx = 0
    else:
      print("Please chose the device to which you want to connect")
      sys.exit(1)
    

  cmd = "pyboard --device " + pyports[idx].device + " " + " ".join('"'+arg+'"' for arg in args[1:])

print(cmd)
os.system(cmd)
